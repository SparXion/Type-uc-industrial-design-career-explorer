version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: uc_mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: uc_industrial_design
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./scripts/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - uc_network

  # Flask Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: uc_backend
    restart: unless-stopped
    environment:
      - FLASK_ENV=development
      - MONGODB_URI=mongodb://admin:password123@mongodb:27017/uc_industrial_design?authSource=admin
      - SECRET_KEY=dev-secret-key-change-in-production
      - JWT_SECRET_KEY=dev-jwt-secret-key-change-in-production
    ports:
      - "5000:5000"
    volumes:
      - ./backend:/app
      - ./uploads:/app/uploads
    depends_on:
      - mongodb
    networks:
      - uc_network
    command: python app.py

  # React Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: uc_frontend
    restart: unless-stopped
    environment:
      - REACT_APP_API_URL=http://localhost:5000/api
      - REACT_APP_ENV=development
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - uc_network
    command: npm start

  # Redis for caching (optional)
  redis:
    image: redis:7-alpine
    container_name: uc_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - uc_network

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local

networks:
  uc_network:
    driver: bridge
